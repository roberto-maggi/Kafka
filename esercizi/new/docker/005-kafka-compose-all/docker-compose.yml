---
services:

  broker01:
    image: confluentinc/cp-server:7.8.0
    hostname: broker01
    container_name: broker01
    ports:
      - "9092:9092"
      - "9101:9101"
    env_file:
      - .env.kafka01
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      interval: 30s
      retries: 5
    networks:
      - net-corso-apache

  broker02:
    image: confluentinc/cp-server:7.8.0
    hostname: broker02
    container_name: broker02
    ports:
      - "9093:9093"
      - "9102:9101"
    env_file:
      - .env.kafka02    
    healthcheck:
      test: nc -z localhost 9093 || exit 1
      interval: 30s
      retries: 5
    networks:
      - net-corso-apache

  broker03:
    image: confluentinc/cp-server:7.8.0
    hostname: broker03
    container_name: broker03
    ports:
      - "9094:9094"
      - "9103:9101"
    env_file:
      - .env.kafka02  
    healthcheck:
      test: nc -z localhost 9094 || exit 1
      interval: 30s
      retries: 5
    networks:
      - net-corso-apache
  

#  kafka-ui:
#    image: provectuslabs/kafka-ui
#    hostname: kafka-ui
#    container_name: kafka-ui
#    ports:
#    - "9088:8080"
#    environment:
#      DYNAMIC_CONFIG_ENABLED: "true"
  

  schema-registry:
    image: confluentinc/cp-schema-registry:7.8.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker01
      - broker02
      - broker03
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker01:29092,broker02:29093,broker03:29094'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - net-corso-apache

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.8.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker01
      - broker02
      - broker03
      - schema-registry
    ports:
      - "9021:9021"
    env_file:
      - .env.controlcenter
    networks:
      - net-corso-apache

  connect:
    image: cnfldemos/cp-server-connect-datagen:0.6.4-7.6.0
    hostname: connect
    container_name: connect
    depends_on:
      - broker01
      - schema-registry
    ports:
      - "8083:8083"
    env_file:
      - .env.connect
    networks:
      - net-corso-apache
    
  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.8.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - broker01
      - broker02
      - broker03
      - connect
    ports:
      - "8088:8088"
    env_file:
      - .env.ksqldbserver
    networks:
      - net-corso-apache

  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:7.8.0
    container_name: ksqldb-cli
    depends_on:
      - broker01
      - broker02
      - broker03
      - connect
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    networks:
      - net-corso-apache

  ksql-datagen:
    image: confluentinc/ksqldb-examples:7.8.0
    hostname: ksql-datagen
    container_name: ksql-datagen
    depends_on:
      - ksqldb-server
      - broker01
      - broker02
      - broker03
      - schema-registry
      - connect
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b broker01:29092 1 40 && \
                       echo Waiting for Confluent Schema Registry to be ready... && \
                       cub sr-ready schema-registry 8081 40 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       sleep 11 && \
                       tail -f /dev/null'"
    env_file:
      - .env.ksqldatagen
    networks:
      - net-corso-apache

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.8.0
    depends_on:
      - broker01
      - broker02
      - broker03
      - schema-registry
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    env_file:
      - .env.restproxy
    networks:
      - net-corso-apache

  flink-sql-client:
    image: cnfldemos/flink-sql-client-kafka:1.19.1-scala_2.12-java17
    depends_on:
      - flink-jobmanager
    hostname: flink-sql-client
    container_name: flink-sql-client
    environment:
      FLINK_JOBMANAGER_HOST: flink-jobmanager
    networks:
      - net-corso-apache

  flink-jobmanager:
    image: cnfldemos/flink-kafka:1.19.1-scala_2.12-java17
    hostname: flink-jobmanager
    container_name: flink-jobmanager
    ports:
    - 9081:9081
    command: jobmanager
    environment:
    - |
      FLINK_PROPERTIES=
      jobmanager.rpc.address: flink-jobmanager
      rest.bind-port: 9081
    networks:
      - net-corso-apache

  flink-taskmanager:
    image: cnfldemos/flink-kafka:1.19.1-scala_2.12-java17
    hostname: flink-taskmanager
    container_name: flink-taskmanager
    depends_on:
    - flink-jobmanager
    command: taskmanager
    scale: 1
    environment:
    - |
      FLINK_PROPERTIES=
      jobmanager.rpc.address: flink-jobmanager
      taskmanager.numberOfTaskSlots: 10
    networks:
      - net-corso-apache


networks:
  net-corso-apache:
    name: net-corso-apache  # stesso nome esplicito
    driver: bridge