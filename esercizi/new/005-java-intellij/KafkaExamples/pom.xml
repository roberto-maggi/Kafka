<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.confluent</groupId>
        <artifactId>rest-utils-parent</artifactId>
        <version>7.8.0</version>
    </parent>

    <groupId>org.example</groupId>
    <artifactId>KafkaExamples</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <gson.version>2.2.4</gson.version>

        <schemaRegistryUrl>http://localhost:8081</schemaRegistryUrl>
        <schemaRegistryBasicAuthUserInfo></schemaRegistryBasicAuthUserInfo>
        <schemaLocal>src/main/resources/avro/io/confluent/examples/clients/cloud/DataRecordAvro2a.avsc</schemaLocal>
        <io.confluent.schema-registry.version>${confluent.version.range}</io.confluent.schema-registry.version>

    </properties>

    <repositories>
        <repository>
            <id>confluent</id>
            <name>Confluent</name>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
        </dependency>

        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-avro-serializer</artifactId>
            <version>${io.confluent.schema-registry.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-streams-avro-serde</artifactId>
            <version>${io.confluent.schema-registry.version}</version>
        </dependency>

        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-json-serializer</artifactId>
            <version>${io.confluent.schema-registry.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!-- Backport reload4j to replace confluent-log4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-reload4j</artifactId>
        </dependency>
    </dependencies>


    <build>
    <plugins>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.1</version>
            <configuration>
                <source>${java.version}</source>
                <target>${java.version}</target>
            </configuration>
        </plugin>

        <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
                <descriptorRefs>
                    <descriptorRef>jar-with-dependencies</descriptorRef>
                </descriptorRefs>
            </configuration>
        </plugin>

        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
                <execution>
                    <goals>
                        <goal>java</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>

        <plugin>
            <groupId>org.jasig.maven</groupId>
            <artifactId>maven-notice-plugin</artifactId>
            <version>1.0.6.1</version>
            <configuration>
                <licenseMapping>
                    <param>../../license-mappings.xml</param>
                </licenseMapping>
            </configuration>
        </plugin>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
                <!--
                 This declaration merges with the one in the parent, rather
                 than overriding it, so we need to disable the "validate" phase
                 execution that the parent declares and declare our own
                 during "test-compile".
                 One reason for this is that avro codegen runs during compile,
                 and while it's not strictly a precondition, it's
                 confusing to address style violations while the IDE is telling you
                 that some generated class doesn't exist. Test-compile is the first phase
                 that's guaranteed to run after compile and before any unit or integration
                 tests.
                 Also, we want to disable the parent's configuration because it declares stuff
                 we don't care about, like suppressions. (Honestly, it shouldn't)
                 -->
                <execution>
                    <id>validate</id>
                    <phase>none</phase>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </execution>
                <execution>
                    <id>test-compile</id>
                    <phase>test-compile</phase>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <consoleOutput>true</consoleOutput>
                        <failsOnError>true</failsOnError>
                        <failOnViolation>true</failOnViolation>
                        <includeResources>false</includeResources>
                        <includeTestResources>false</includeTestResources>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <excludes>io/confluent/examples/clients/cloud/**</excludes>
                        <configLocation>checkstyle.xml</configLocation>
                    </configuration>
                    <goals>
                        <goal>check</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>

        <plugin>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-maven-plugin</artifactId>
            <version>${avro.version}</version>
            <executions>
                <execution>
                    <phase>generate-sources</phase>
                    <goals>
                        <goal>schema</goal>
                    </goals>
                    <configuration>
                        <sourceDirectory>${project.basedir}/src/main/resources/avro/</sourceDirectory>
                        <includes>
                            <include>CustomerAvro.avsc</include>
                        </includes>
                        <outputDirectory>${project.build.directory}/generated-sources</outputDirectory>
                    </configuration>
                </execution>
            </executions>
        </plugin>

        <plugin>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry-maven-plugin</artifactId>
            <version>${io.confluent.schema-registry.version}</version>
            <configuration>
                <schemaRegistryUrls>
                    <param>${schemaRegistryUrl}</param>
                </schemaRegistryUrls>
                <userInfoConfig>${schemaRegistryBasicAuthUserInfo}</userInfoConfig>
                <subjects>
                    <test2-value>${schemaLocal}</test2-value>
                </subjects>
                <schemaTypes>
                    <test2-value>AVRO</test2-value>
                </schemaTypes>
            </configuration>
            <goals>
                <goal>test-compatibility</goal>
            </goals>
        </plugin>

    </plugins>
    </build>


</project>